/* 
    Author: Gwyn, Samii
    Date: 26/10/23

    Adding grids into the mix

    Blatantly copied from stylesheet_prices with minimal changes

*/


/*
    Yeah, this is gonna be hard to explain properly. To start, I didn't really understand what I was doing at first.
    The way I understand it, display: grid is just one of those things you need, well, a grid, I mean.
    Then the colums and rows. I think you just put auto for the amount you want, meaning auto auto auto gives 3 columns. [I changed it after making this comment :3]
    The gap just creates some space between the boxes in the grid. [I have no idea if this even does anything, honestly]
    Align-content: center just puts the grid in the center of the page. I'm unsure if this one actually works.

    Position: fixed puts the grid into the text. Well underneath the text, like right below it. It merges the formatting. Other words for make it look good.
    This was a lie. This one line of code made it look garbage, so I removed it. Well, kept it, just commented it. See the process, learn from it.

    Width: 100vh just makes it as wide as the view, the page. [This also has been changed, it extended the page slightly. Probably had to do with the gap (it did not)]
*/


footer 
{
    margin: 0px -8px -8px;
    position: absolute;
    bottom: 0;
    background-color:rgb(51, 51, 51);
    height: fit-content;
    width: 100vw;
}

#page-container 
{
    position: relative;
    min-height: 100vh;
}
  
#content-wrap 
{
    padding-bottom: 14rem;    /* adds padding to prevent the footer from overlapping other elements */
}

#grid 
{
    display: grid;
    border-top: 3px solid blueviolet;
    grid-template-columns: auto auto;
    grid-template-rows: auto;
    gap: 0px;
    align-content: center;
    box-sizing: border-box;
}

#grid2 
{
    margin: 0px -8px;
    display: grid;
    border-top: 3px solid blueviolet;
    grid-template-columns: auto auto;
    grid-template-rows: auto;
    gap: 0px;
    align-content: center;
    box-sizing: border-box;
}

#grid3 
{
    margin: 0px -8px;
    display: grid;
    border-top: 3px solid blueviolet;
    grid-template-columns: auto auto auto;
    grid-template-rows: auto;
    gap: 0px;
    align-content: center;
    box-sizing: border-box;
}

/*
    These are simpler, the grid-row just says it takes the full row. Rows are horizontal, so it works. Just trust me on this.
    Grid-column I actually have to explain. 1/1 means it takes up 1 through 1, so only the first. 2/2 works the exact same, it takes only the second slot an so on.
    Text-align: center makes the text go middle of grid block. 
*/

.leftSide 
{
    grid-column: 1/1;
    grid-row: 1/1;
    text-align: center;
    font-size: larger;
}

.rightSide 
{
    grid-column: 2/2;
    grid-row: 1/1;
    text-align: center;
    font-size: larger;
}

.evenRighterSide 
{
    grid-column: 3/3;
    grid-row: 1/1;
    text-align: center;
    font-size: larger;
}

/*
    This just removes the bullet. Unlike-
*/

#grid ul 
{
    list-style-type: none;
}

#grid2 ul 
{
    list-style-type: none;
}

footer ul 
{
    font-size: smaller;
}

footer h5 
{
    font-size: large;
}

li h5 
{
    font-size: larger;
}

footer figcaption 
{
    font-size: smaller;
}

#content
{
    margin-bottom: 20px;
}

